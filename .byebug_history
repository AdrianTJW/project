<<<<<<< HEAD

current_user.image.url
<%= current_user.fullname %>
=======
c
n
@jobs
n
params
>>>>>>> master
c
job.country
geo.postal_code
geo.city
<<<<<<< HEAD
=======
=======

c
result.id
result
n
c
n
result
n
@result
n
c
n
result
n
@result
n
@result
n
@job
n
c
n
c
n
@client_token
c
@client_token
n
current_host
n
Braintree::ClientToken.generate
n
current_user.has_payment_info?
n
current_user
c
generate_client_token
c
Braintree::ClientToken.generate
current_user.braintree_customer_id
Braintree::ClientToken.generate(customer_id: current_user.braintree_customer_id)
generate_client_token
@client_token
c
@client_token
@booking
@job
current_user
@client_token
c
n
exit
current_user
current_user.has_payment_info?
c
@booking
c
n
params
exit
params
@result
c
n
params[:booking_id].nil?
@booking
params
exit
n
@result
exit
a = ActionController::Base.helpers.number_to_currency(@job.salary * 0.05)
number_to_currency(50)
number_to_currency("50.00")
number_to_currency(a)
sprintf "%.2f", a
BigDecimal(a)
Decimal(a)
a = ActionController::Base.helpers.number_with_precision(@job.salary * 0.05, precision: 2)
ActionController::Base.helpers.number_with_precision(@job.salary * 0.05, precision: 2).to_f
ActionController::Base.helpers.number_with_precision(@job.salary * 0.05, precision: 2).to_i
@job.salary
ActionController::Base.helpers.number_with_precision(@job.salary * 0.05, precision: 2)
render amount: number_with_precision(@job.salary * 0.05, precision: 2)
amount: number_with_precision(@job.salary * 0.05, precision: 2)
number_with_precision(50.0, precision: 2)
@job.salary * 0.05
@amount
exit
@result
c
n
@result
c
job.bookings
params
c
current_host.has_payment_info?
unless current_host.has_payment_info?
current_host.has_payment_info?
c
@job
c
params
c
params
c
params
c
params
c
exit
c
params
exit
params
@job
c
params
c
params
c
params
c
@job
c
params
c
params
c
exit
params
exit
@job
c
object
n
>>>>>>> master
>>>>>>> master
c
object
n
exit
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> master
object.save!
object
n
user.remote_image_url
user.remote_image_url = auth.info.image.gsub('http://','https://')
auth.info.image
auth.info.name
user.remote_image_url
n
exit
object.save!
object
n
<<<<<<< HEAD
c
params[:job_id]
exit
@booking.user.email
@booking.job.host.email
@booking.host.email
@booking.job.host.fullname
@booking.host_id
@booking.user.fullname
@booking.host.fullname
@booking = booking
@url
booking
params
@booking
exit
@booking.user.fullname
=======
=======
object.save
object.image
object.save!
object
n
object
n
user.remote_image_url
user.remote_image_url = auth.info.image.gsub('http://','https://')
auth.info.image
user.image
user.remote_image_url
c
user.image
object
n
object
n
yield self if block_given?
user.remote_image_url
n
user.fullname
n
user.email
n
auth
>>>>>>> master
c
params[:job_id]
exit
Booking.find_by(id: params[:id])
params
exit
@booking.id
@booking
params
c
params
exit
User.find_by(id: params[:id])
params
exit
@job.bookings.first.user.contact
@job.bookings.first.user.fullname
@job.bookings.first
@job.bookings
@job
@bookings.each do {|x| x.user.fullname}
@bookings.user
@bookings = @job.bookings.all
params
a.user
a = @job.bookings
@job.bookings.user
@job.bookings
@job.bookings.user.fullname
@job.booking.user.fullname
@job.bookings.user.fullname
@job.bookings
@job
c
current_user.bookings.where(user_id: current_user.id, job_id: params[:id]).any?
current_user.bookings.where(user_id: current_user.id, job_id: params[:id])
current_user.bookings.where(user_id: current_user.id, job_id: params[:id]).nil?
params
exit
Bookings.all
@job.bookings
@job.bookings.all
@job = Job.find_by(id: params[:job_id])
params[:job_id]
params
@job
c
x.bookings.each do {|y| y.user.fullname} end
x.bookings.each do {|y| y.user.fullname}
x.booking
x.bookings
c
current_host.jobs
current_host
c
current_user.bookings.where(user_id: current_user.id).nil?
current_user.bookings.where(user_id: current_user.id)
bookings.where(user_id: current_user.id)
current_user.bookings
current_user.bookings.user_id
@job.bookings.user_id
@job.booking.user_id
a.where(user_id: current_user.id)
current_user.id
a.id
a.user_id
a = @job.bookings
@job.bookings
@job.bookings.job_id
@job.bookings
@job.bookings.user_id
@job
>>>>>>> master
@booking
exit
current_host.id
@job.host_id
cc
c
@hash
c
<<<<<<< HEAD
@booking.user.fullname
@booking
exit
booking
@booking
booking
=======
@hash
c
@hash
@jobs
c
a.search params[:company_name]
a.search params[:search]
a=Job.all
Job.all
<<<<<<< HEAD
c
Job.where(host_id: current_host.id)
Job.find_by(current_host.id)
Job.find_by(host_id: current_host.id)
Job.find_by(host_id: current_host.id
Job.all
exit
n
@jobs
exit
@jobs
c
exit
current_user
params
c
exit
resource_name
c
params
exit
params
exit
params
c
Booking.all
Booking.last
Booking.find(params[:id])
params[:id]
params
exit
params
c
current_user.bookings.all
exit
@booking.job.type
exit
@booking
exit
>>>>>>> master
params[:job_id]
params[:booking]
params
c
params
c
n
params[:job_id]
params
c
params
exit
params(:booking)
params.require(:booking).permit(:user_id)
params
c
params
c
params
exit
params
exit
params[:id]
params
exit
params[:job][:id]
params[:id]
params
c
exit
params[:id]
params(:id)
params
params[:job][:job_id]
params[:job][:id]
params[:job]
params(id)
params(:id)
params(job_id)
params(:id)
params
exit
params
c
user_params
exit
user_params
exit
User.find_by(id: current_user.id)
User.find(id: current_user.id)
current_user.id
current_user
c
exit
current_host.verify_status == true
current_host.verify_status == "true"
current_host.verify_status
current_host
c
@user
c
n
object
n
object
n
yield self if block_given?
n
c
object
n
object
n
where(provider: auth.provider, uid: auth.uid).first_or_create
c
n
auth.info.image
auth.info.name
auth.info.email
where(provider: auth.provider, uid: auth.uid).first_or_create
auth.uid
auth.provider
auth
c
@user.image
@user
user.image
n
params
access_token.info
access_token
exit
@user.persisted?
@user
c
generate_client_token
marker.lat job.latitude
marker.infowindow job.company_name
marker.infowindow
c
Job.all
c
<<<<<<< HEAD
n
c
Job.new(job_params)
job_params
jb_params

=======
>>>>>>> master
